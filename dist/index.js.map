{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cluster from 'cluster';\r\nimport * as fs from 'fs';\r\n\r\nenum LoggerLevel {\r\n  TRACE = 0,\r\n  DEBUG = 1,\r\n  INFO = 2,\r\n  WARN = 3,\r\n  ERROR = 4,\r\n  SILENT = 5\r\n}\r\n\r\nenum State {\r\n  STATE_IDLE = 0,\r\n  STATE_PROCESS = 1,\r\n  STATE_FAIL = 2\r\n}\r\n\r\nlet logger: Logger;\r\n\r\ninterface Item {\r\n  msg: string;\r\n  level: string;\r\n}\r\n\r\ninterface ILoggerOptions {\r\n  level?: number;\r\n  stdout?: boolean;\r\n  filename: string;\r\n}\r\n\r\nclass Logger {\r\n  private options: ILoggerOptions;\r\n  private stack: Item[];\r\n  private level: number;\r\n  private filename: string;\r\n  private state: number;\r\n\r\n  constructor(options: ILoggerOptions) {\r\n    this.options = Object.assign({\r\n      level: LoggerLevel.INFO,\r\n      stdout: false\r\n    }, options);\r\n    this.stack = [];\r\n    this.level = this.options.level;\r\n    this.filename = this.options.filename;\r\n    this.state = State.STATE_IDLE;\r\n\r\n    cluster.on('message', (worker, msg, handle) => {\r\n      if (msg && msg.type === 'Logger')\r\n        this.addToStack(msg);\r\n      this.init();\r\n    });\r\n  }\r\n\r\n  write(text: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.options.stdout)\r\n        console.log(text);\r\n\r\n      fs.appendFile(this.options.filename, text + '\\n', (err) => {\r\n        if (err)\r\n          reject(err);\r\n        else\r\n          resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  buildLine(msg: string, level: string, args: any): string {\r\n    // 'text{0}text{1}text{2}'\r\n    if (args.length > 1) {\r\n      for (let i = 1; i <= args.length; i++) {\r\n        let arg;\r\n\r\n        try {\r\n          arg = (typeof args[i] === 'object') ? JSON.stringify(args[i]) : args[i];\r\n        }\r\n        catch (e) {\r\n          arg = '';\r\n        }\r\n\r\n        msg = msg.replace(new RegExp(`\\\\{${i}\\\\}`, 'i'), arg);\r\n      }\r\n    }\r\n\r\n    let time = new Date().toISOString();\r\n    return `${time} - ${level.toUpperCase()}: ${msg}`;\r\n  }\r\n\r\n  addToStack(item: Item): void {\r\n    this.stack.push(item);\r\n  }\r\n\r\n  addLog(msg: string, level: string, args?: any): void {\r\n    if (cluster.isMaster) {\r\n      this.addToStack({\r\n        msg: this.buildLine(msg, level, args),\r\n        level: level\r\n      });\r\n      this.init();\r\n    } else {\r\n      process.send({\r\n        type: 'Logger',\r\n        msg: msg,\r\n        level: level\r\n      });\r\n    }\r\n  }\r\n\r\n  init(): void {\r\n    if (this.state === State.STATE_IDLE && this.stack.length) {\r\n      this.state = State.STATE_PROCESS;\r\n      this.process();\r\n    } else if (this.state === State.STATE_PROCESS && this.stack.length === 0) {\r\n      this.state = State.STATE_IDLE;\r\n    } else if (this.state === State.STATE_FAIL) {\r\n      if (this.stack.length) {\r\n        this.state = State.STATE_PROCESS;\r\n        this.process();\r\n      } else {\r\n        this.state = State.STATE_IDLE;\r\n      }\r\n    }\r\n  }\r\n\r\n  process(): void {\r\n    let self = this;\r\n    processNext();\r\n\r\n    function processNext(): void {\r\n      let last = self.stack[0];\r\n      if (last)\r\n        self.write(last.msg).then(() => {\r\n          self.stack.shift();\r\n          processNext(); // recursion\r\n        }).catch((e) => {\r\n          console.log(e);\r\n          self.state = State.STATE_FAIL;\r\n          // delay on the error.\r\n          setTimeout(() => {\r\n            self.init();\r\n          }, 2000);\r\n        });\r\n      else {\r\n        // stop recursion\r\n        self.state = State.STATE_IDLE;\r\n      }\r\n    }\r\n  }\r\n\r\n  trace(msg: string): void {\r\n    if (LoggerLevel.TRACE >= this.level) {\r\n      this.addLog(msg, 'TRACE', arguments);\r\n    }\r\n  }\r\n\r\n  debug(msg: string): void {\r\n    if (LoggerLevel.DEBUG >= this.level) {\r\n      this.addLog(msg, 'DEBUG', arguments);\r\n    }\r\n  }\r\n\r\n  info(msg: string): void {\r\n    if (LoggerLevel.INFO >= this.level) {\r\n      this.addLog(msg, 'INFO', arguments);\r\n    }\r\n  }\r\n\r\n  warn(msg: string): void {\r\n    if (LoggerLevel.WARN >= this.level) {\r\n      this.addLog(msg, 'WARN', arguments);\r\n    }\r\n  }\r\n\r\n  error(msg: string): void {\r\n    if (LoggerLevel.ERROR >= this.level) {\r\n      this.addLog(msg, 'ERROR', arguments);\r\n    }\r\n  }\r\n}\r\n\r\nfunction LoggerFactory(options: ILoggerOptions) {\r\n  return logger || (logger = new Logger(options));\r\n}\r\n\r\nexport {\r\n  LoggerLevel,\r\n  ILoggerOptions,\r\n  LoggerFactory as Logger,\r\n};"]}